1.兼容性问题:
	1.1 kernel版本兼容（因为不同版本的kernel api有些许差异）
	解决行为：1.在代码中加入kernel检测机制，不同版编译不同api
		  2. 尽量使用每个kernel版本共有的api, 有些convenient function
		     如果可以自己实现就自己实现


	1.2 phy driver 的兼容（100M , 1000M, autophy ）
	解决行为：1. 100M 与1000M及后面的2.5G等等都可以整合到一个driver中，autophy则作为一个独立的driver
		  2. 所有phy driver 都整合到一个driver（不推荐）

2.平台编译问题:
	描述：我遇到客户平台有arm, x86, android，客户需求大多是我们提供源码他们自己编译
	使用方式大概有两种：1.将我们的phy编入到kernel中，然后烧录到开发板中去，2.编译成模块加载让他开机自己挂载
	启动。

	解决行为：1.提供源码的情况：客户自己使用开发环境编译，我们只提供交叉编译的方法，交叉编译工具客户自己安装。
		    根据客户的使用方式，我们也需要提供相应的加载方法
		  2.提供ko文件情况：这里需要我们帮客户把代码编译好，然后也提供相应的方案

3.doc问题:
	解决行为：1.文档尽可能详细

4. release问题：
	1.以打包的方式release（目前提供给客户的代码都是tar包）
	2.以git方式release

思考：
1.这个库是全部给客户？还是交付部分源码?
2.此代码交付给客户后是由客户自己编写代码使用？还是由我们保持更新代码？


目前基本思路：
1.jl2xxx的device tree的写法问题，及patch要不要加的问题
2.此repo与提交到kernel是两回事
3.此repo全部开放给客户，而我需要补齐文档
	3.1 说明这个repo怎么使用
	3.2 说明phy driver怎么加载和方式
