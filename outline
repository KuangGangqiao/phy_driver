1. Compatibility issues:
	1.1 kernel version compatibility (due to slight differences in kernel APIs between different versions)
	Solution behavior:
		1. Add kernel detection mechanism to the code, and compile different APIs for different versions
		2. Try to use the common APIs of each kernel version, some of which are conservative functions.
		   If you can do it yourself, do it yourself
	1.2 phy driver compatibility (100M, 1000M, autophy)
	Solution behavior:
		1. 100M, 1000M, and later 2.5G can be integrated into one driver, while autophy serves as
		   an independent driver
		2. All phy drivers are integrated into one driver (not recommended)
2. Platform compilation issues:
	Description: I have encountered clients with platforms such as ARM, x86, and Android.
		     Most of the clients require us to provide source code and compile it themselves.
	There are roughly two ways to use it:
		1. Compile our phy into the kernel, then burn it into the development board.
		2. Compile it into a module to load and let it boot and mount itself start.
	Solution behavior:
		1. Provide source code: The customer compiles using the development environment themselves,
		   and we only provide cross compilation methods. The cross compilation tool is installedl by
		   the customer themselves. According to the customer's usage, we also need to provide
		   corresponding loading methods.
		2. Provide KO file information: Here, we need to help the customer compile the code and provide
		   corresponding solutions as well
3. doc issue:
	Solution behavior:
		1. The document should be as detailed as possible
4. Release issue:
	1. Release in a packaged manner (currently, the code provided to customers is all tar packages)
	2. Release in git mode
5.Thinking:
	Is this library all for customers? Or deliver some source code?
	Is this code written and used by the customer after being delivered to them? Or should we keep updating the code?
Current basic ideas:
	1. The writing problem of device tree for jl2xxx and whether to add patches
	2. This repo is different from submitting to the kernel
	3. This repo section is open to customers, and I need to complete the documents
		3.1 Explain how to use this repo
		3.2 Explanation of how to load and how to use the phy driver

